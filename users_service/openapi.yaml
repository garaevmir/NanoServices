openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
  description: API для управления пользователями и их профилями
servers:
  - url: http://localhost:8080
    description: Локальный сервер

tags:
  - name: Authentication
    description: Методы для регистрации и аутентификации пользователей
  - name: Profile
    description: Методы для работы с профилем пользователя

paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: testuser
                password:
                  type: string
                  example: password123
                email:
                  type: string
                  example: test@example.com
              required:
                - username
                - password
                - email
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
        "400":
          description: Неверный формат данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to create user"

  /login:
    post:
      tags:
        - Authentication
      summary: Аутентификация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: testuser
                password:
                  type: string
                  example: password123
              required:
                - username
                - password
      responses:
        "200":
          description: Аутентификация успешна
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Authentication successful"
                  Token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMmZhZmQ0ODYtYTQ5OS00MzQwLTllNDEtNTk1ZjRmNGJjNWU2In0.mrnmO230x9RAAoLHLMK5Rjt5x4tovQdXPExKwcmTjDI"
        "401":
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid username"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "generating token error"

  /profile:
    get:
      tags:
        - Profile
      summary: Получение профиля пользователя
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: testuser
      responses:
        "200":
          description: Профиль пользователя успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174000"
                  user_id:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174000"
                  first_name:
                    type: string
                    example: "John"
                  last_name:
                    type: string
                    example: "Doe"
                  email:
                    type: string
                    example: "john.doe@example.com"
                  birthdate:
                    type: string
                    format: date
                    example: "1990-01-01"
                  phone_number:
                    type: string
                    example: "+1234567890"
                  bio:
                    type: string
                    example: "Software engineer and open-source enthusiast."
                  created_at:
                    type: string
                    format: date-time
                    example: "2023-10-01T12:34:56Z"
        "404":
          description: Профиль пользователя не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: "Profile not found"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: "Failed to fetch profile"

    post:
      tags:
        - Profile
      summary: Обновление профиля пользователя
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            example: testuser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: "John"
                last_name:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  example: "john.doe@example.com"
                birthdate:
                  type: string
                  format: date
                  example: "1990-01-01"
                phone_number:
                  type: string
                  example: "+1234567890"
                bio:
                  type: string
                  example: "Updated bio"
      responses:
        "200":
          description: Профиль успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Profile updated successfully"
        "400":
          description: Неверный формат данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: "Invalid input"
        "404":
          description: Профиль пользователя не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: "Profile not found"
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: "Failed to fetch profile"
